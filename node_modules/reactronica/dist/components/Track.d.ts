import React from 'react';
import { MidiNote } from '../types/midi-notes';
export interface StepNoteType {
    name: MidiNote;
    duration?: number | string;
    velocity?: number;
}
export declare type StepType = StepNoteType | StepNoteType[] | MidiNote | MidiNote[] | (StepNoteType | MidiNote)[] | null;
export interface TrackProps {
    steps?: StepType[];
    volume?: number;
    pan?: number;
    mute?: boolean;
    solo?: boolean;
    subdivision?: string;
    effects?: React.ReactNode[];
    children: React.ReactNode;
    onStepPlay?: (stepNotes: StepNoteType[], index: number) => void;
}
export interface TrackConsumerProps extends TrackProps {
    isPlaying: boolean;
}
export declare const TrackContext: React.Context<{
    volume: number;
    pan: number;
    mute: boolean;
    solo: boolean;
    effectsChain: any;
    onInstrumentsUpdate: any;
    onAddToEffectsChain: any;
    onRemoveFromEffectsChain: any;
}>;
declare const Track: React.FC<TrackProps>;
export default Track;
